#!/usr/bin/perl

use v5.10;
use strict;
use warnings;

# Clean exit handler for Ctrl+C
$SIG{INT} = sub { remove_temp_file_and_exit() };

# DNS servers can be found in the output of the ipconfig.exe
my $output = `/mnt/c/Windows/System32/ipconfig.exe /all`;

my $temp_file = 'resolv.conf.temp';
my $target_file = '/etc/resolv.conf';
my @ips = ();

# Regex is a slightly modified answer from:
# https://stackoverflow.com/a/12202394/14458327
#
# It should match all IPv4 addresses between 1 and 3 digits in each
# of four sections
if ($output =~ /DNS Servers[\s\.:]+((\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\s*)+)/m) {
    @ips = split(/\s+/, $1);
}

open(my $fh, '>', $temp_file) or die "Can't open $temp_file: $!";

my $datestring = localtime();
say $fh '# Auto-generated from ipconfig.exe';
say $fh "# on $datestring";

foreach (@ips) {
    say $fh "nameserver $_";
}

# Add basic Cloudflare DNS as the last one
say $fh 'nameserver 1.1.1.1';
close $fh;

# Print the generated file to the user
open(my $in, '<', $temp_file) or die "Can't open $temp_file: $!";
say "$temp_file generated:\n";
print <$in>;

print "\nUpdate '$target_file'? (y/N): ";
chomp(my $ok = <>) or remove_temp_file_and_exit();

if ($ok eq 'y') {
    update_target_file();
} else {
    remove_temp_file_and_exit();
}

sub update_target_file {
    say "Using sudo to update '$target_file'...";
    my $exit_code = system('sudo', 'mv', $temp_file, $target_file);

    if ($exit_code != 0) {
        say "Failed to update '$target_file'!";
        remove_temp_file_and_exit();
    } else {
        say "Successfully updated '$target_file'!";
    }
    exit 0;
}

sub remove_temp_file_and_exit {
    say "\nAborting...";
    if (-e $temp_file) {
        say "Deleting temporary $temp_file...";
        unlink($temp_file) or die "Failed to delete $temp_file!";
    }
    exit 1;
}
